/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import associationruleminer.AprioriTID;
import associationruleminer.ExtratorRegras;
import configuracoes.Configuracao;
import estruturas.Regra;
import java.awt.Toolkit;
import java.awt.datatransfer.Clipboard;
import java.awt.datatransfer.StringSelection;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.OutputStreamWriter;
import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.HashSet;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.ListModel;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author rafael
 */
public class TelaPrincipal extends javax.swing.JFrame {

    HashMap<String,HashSet<Integer>> map;
    String caminhoBase;
    Configuracao configuracao;
    ArrayList<Regra> regras;
    String lastDirectory;
    
    public TelaPrincipal() {
        lastDirectory = "";
        configuracao = new Configuracao();
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        tCaminhoBase = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        bProcurar = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tRegras = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        lTempo = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        lNumRegras = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        tItemAntecedente = new javax.swing.JTextField();
        tItemConsequente = new javax.swing.JTextField();
        cItemAntecedente = new javax.swing.JCheckBox();
        cItemConsequente = new javax.swing.JCheckBox();
        bFiltrar = new javax.swing.JButton();
        bExportarCSV = new javax.swing.JButton();
        bCopyClipboard = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        cConfianca = new javax.swing.JCheckBox();
        tConfMin = new javax.swing.JTextField();
        cLift = new javax.swing.JCheckBox();
        tMinLift = new javax.swing.JTextField();
        cRI = new javax.swing.JCheckBox();
        tMinRI = new javax.swing.JTextField();
        cConviccao = new javax.swing.JCheckBox();
        tMinConviccao = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        tSupMin = new javax.swing.JTextField();
        cAddedValue = new javax.swing.JCheckBox();
        tMinAddedValue = new javax.swing.JTextField();
        cOddsRatio = new javax.swing.JCheckBox();
        tMinOddsRatio = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        cMaxNumItensCorpo = new javax.swing.JCheckBox();
        tNumItensCorpo = new javax.swing.JTextField();
        cRemoverItens = new javax.swing.JCheckBox();
        cRegrasCorpoVazio = new javax.swing.JCheckBox();
        jScrollPane2 = new javax.swing.JScrollPane();
        lItens = new javax.swing.JList<>();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("AssociationRuleMiner");
        setResizable(false);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Conjunto de Dados"));

        jLabel1.setText("Caminho:");

        bProcurar.setText("Procurar...");
        bProcurar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bProcurarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tCaminhoBase)
                .addGap(18, 18, 18)
                .addComponent(bProcurar, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tCaminhoBase, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(bProcurar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Regras"));

        tRegras.setAutoCreateRowSorter(true);
        tRegras.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Corpo", "Cabeça", "Suporte", "Confiança", "Lift", "Rule Interest", "Convicção", "Added Value", "Odds Ratio"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tRegras);

        jLabel4.setText("Tempo de Processamento:");

        lTempo.setText("______________");

        jLabel5.setText("Nº de Regras Geradas:");

        lNumRegras.setText("______________");

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Filtros"));
        jPanel5.setEnabled(false);

        cItemAntecedente.setText("Item no Antecedente:");

        cItemConsequente.setText("Item no Consequente:");

        bFiltrar.setText("Filtrar");
        bFiltrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bFiltrarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(cItemAntecedente, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tItemAntecedente, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(cItemConsequente)
                .addGap(18, 18, 18)
                .addComponent(tItemConsequente, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(bFiltrar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tItemAntecedente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tItemConsequente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cItemAntecedente)
                    .addComponent(cItemConsequente)
                    .addComponent(bFiltrar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        bExportarCSV.setFont(new java.awt.Font("Noto Sans", 1, 14)); // NOI18N
        bExportarCSV.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gui/csv.png"))); // NOI18N
        bExportarCSV.setText("   Exportar para CSV");
        bExportarCSV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bExportarCSVActionPerformed(evt);
            }
        });

        bCopyClipboard.setFont(new java.awt.Font("Noto Sans", 1, 13)); // NOI18N
        bCopyClipboard.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gui/clipboard.png"))); // NOI18N
        bCopyClipboard.setText("<html>    Copiar para a<br>Área de Trabalho </html>");
        bCopyClipboard.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bCopyClipboardActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1331, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lNumRegras, javax.swing.GroupLayout.DEFAULT_SIZE, 146, Short.MAX_VALUE)
                            .addComponent(lTempo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(443, 443, 443)
                .addComponent(bExportarCSV, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(bCopyClipboard, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(lNumRegras))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(lTempo, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 374, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(bExportarCSV)
                    .addComponent(bCopyClipboard, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18))
        );

        jButton1.setFont(new java.awt.Font("DejaVu Sans", 1, 16)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gui/miner.png"))); // NOI18N
        jButton1.setText("   Extrair Regras");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Medidas de Interesse"));

        cConfianca.setText("Confiança Mínima:");

        tConfMin.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        tConfMin.setText("0.0");

        cLift.setText("Lift Mínimo:");

        tMinLift.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        tMinLift.setText("0.0");

        cRI.setText("Rule Interest Mínimo:");

        tMinRI.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        tMinRI.setText("0.0");

        cConviccao.setText("Convicção:");

        tMinConviccao.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        tMinConviccao.setText("0.0");

        jLabel2.setText("Suporte Mínimo:");

        tSupMin.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        tSupMin.setText("0.0");

        cAddedValue.setText("AddedValue:");

        tMinAddedValue.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        tMinAddedValue.setText("0.0");

        cOddsRatio.setText("Odds Ratio");

        tMinOddsRatio.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        tMinOddsRatio.setText("0.0");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(cLift, javax.swing.GroupLayout.DEFAULT_SIZE, 139, Short.MAX_VALUE)
                        .addComponent(cConfianca, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(cRI))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(tSupMin, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 99, Short.MAX_VALUE)
                    .addComponent(tConfMin, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tMinLift, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tMinRI, javax.swing.GroupLayout.Alignment.LEADING))
                .addGap(41, 41, 41)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(cConviccao, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(tMinConviccao, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(cOddsRatio)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(tMinOddsRatio, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(cAddedValue)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(tMinAddedValue, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(tSupMin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(tMinConviccao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cConviccao)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cConfianca)
                    .addComponent(tConfMin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cAddedValue)
                    .addComponent(tMinAddedValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cLift)
                    .addComponent(tMinLift, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cOddsRatio)
                    .addComponent(tMinOddsRatio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cRI)
                    .addComponent(tMinRI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Opções"));

        cMaxNumItensCorpo.setText("Nº Máximo de Itens no Corpo da Regra:");

        tNumItensCorpo.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        tNumItensCorpo.setText("1");

        cRemoverItens.setText("Excluir Itens das Regras");

        cRegrasCorpoVazio.setText("Exibir Regras com Corpo Vazio");

        lItens.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane2.setViewportView(lItens);

        jButton3.setText("<- Adicionar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("<- Remover  ");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(109, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(cRemoverItens)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton4)
                            .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(cMaxNumItensCorpo, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tNumItensCorpo, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(49, 49, 49)
                        .addComponent(cRegrasCorpoVazio)))
                .addGap(96, 96, 96))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cMaxNumItensCorpo)
                    .addComponent(tNumItensCorpo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cRegrasCorpoVazio))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton3)
                        .addGap(18, 18, 18)
                        .addComponent(jButton4)
                        .addGap(41, 41, 41))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cRemoverItens))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        jLabel3.setBackground(java.awt.Color.lightGray);
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Desenvolvido por Rafael Geraldeli Rossi ©  2018");
        jLabel3.setOpaque(true);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10)))
                .addContainerGap())
            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        long begin = System.currentTimeMillis();
        
        tItemAntecedente.setText("");
        tItemConsequente.setText("");
        cItemAntecedente.setSelected(false);
        cItemConsequente.setSelected(false);
        
        map = new HashMap<String,HashSet<Integer>>();
        int numTransacoes = 0;
        try{
            BufferedReader arq = new BufferedReader(new FileReader(tCaminhoBase.getText()));
            String linha = "";
            while( (linha = arq.readLine()) != null ){
                linha = linha.replaceAll("\\t+", " ");
                linha = linha.replaceAll(" +", " ");
                linha = linha.trim();
                
                if(linha.length() == 0){
                    continue;
                }
                
                String[] partes = linha.split(" ");
                for(String parte : partes){
                    if(map.containsKey(parte)){
                        map.get(parte).add(numTransacoes);
                    }else{
                        HashSet<Integer> ids = new HashSet<Integer>();
                        ids.add(numTransacoes);
                        map.put(parte, ids);
                    }
                }
                numTransacoes++;
            }
        }catch(Exception e){
            System.out.println("");
        }
        
        definirConfiguracao();
        
        AprioriTID apriori = new AprioriTID();
        HashMap<String,Double> itemsetsFrequentes = apriori.minerar(map, Double.parseDouble(tSupMin.getText()), numTransacoes, configuracao);
        
        ExtratorRegras extratorRegras = new ExtratorRegras();
        regras = extratorRegras.extrairRegras(itemsetsFrequentes, configuracao);
        
        DefaultTableModel modeloTabela = gerarModeloTabela(regras);
        tRegras.setModel(modeloTabela);
        lNumRegras.setText(String.valueOf(regras.size()));
        
        long end = System.currentTimeMillis();
        double tempoSec = (end - begin) / 1000;
        
        lTempo.setText(tempoSec + " seg.");
    }//GEN-LAST:event_jButton1ActionPerformed

    private void bFiltrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bFiltrarActionPerformed
        
        ArrayList<Regra> regrasFiltradas = filtrarRegras();
        
        DefaultTableModel modeloTabela = gerarModeloTabela(regrasFiltradas);
        if(modeloTabela == null){
            return;
        }
        tRegras.setModel(modeloTabela);
        lNumRegras.setText(String.valueOf(regrasFiltradas.size()));
        
    }//GEN-LAST:event_bFiltrarActionPerformed

    private void bProcurarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bProcurarActionPerformed
        JFileChooser open = new JFileChooser();
        open.setFileSelectionMode(open.FILES_ONLY);
        open.setDialogTitle("Abrir");
        open.setDialogType(open.SAVE_DIALOG);
        open.addChoosableFileFilter(new FileNameExtensionFilter("Comma-Separated Values (*.csv)", "csv"));
        open.addChoosableFileFilter(new FileNameExtensionFilter("Data (*.dat)", "dat"));
        open.addChoosableFileFilter(new FileNameExtensionFilter("Data (*.data)", "data"));
        open.addChoosableFileFilter(new FileNameExtensionFilter("Plain Text (*.txt)", "txt"));
        open.showOpenDialog(null);
        
        File file = open.getSelectedFile();
        if(file != null && file.getAbsolutePath().length() != 0){
            tCaminhoBase.setText(file.getAbsolutePath());
        }
    }//GEN-LAST:event_bProcurarActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        JOptionPane ent = new JOptionPane();
        try{
            String item = ent.showInputDialog(this,"Itemset","AssociationRuleMiner", ent.PLAIN_MESSAGE);
            ListModel model = lItens.getModel();
            DefaultListModel model2 = new DefaultListModel();
            for(int j = 0;j<model.getSize();j++){
                model2.addElement(model.getElementAt(j));
            }
            model2.addElement(item);
            lItens.setModel(model2);
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, "Incorrect value");
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        int i = lItens.getSelectedIndex();
        if(i == -1) return;
        ListModel model = lItens.getModel();
        DefaultListModel model2 = new DefaultListModel();
        for(int j = 0;j<model.getSize();j++){
            model2.addElement(model.getElementAt(j));
        }
        model2.removeElementAt(i);
        lItens.setModel(model2);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void bExportarCSVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bExportarCSVActionPerformed
        
        StringBuffer saida = gerarConteudo();
        if(saida == null){
            return;
        }
        
        
        //Abrindo a caixa de diálogo ======================================================
        
        JFileChooser save = new JFileChooser();
        save.setFileSelectionMode(save.FILES_ONLY);
        save.setDialogTitle("Save");
        save.setDialogType(save.SAVE_DIALOG);
        save.setFileFilter(new FileNameExtensionFilter("Comma-Separated Values (*.csv)", "csv"));
        save.showSaveDialog(null);

        File config = save.getSelectedFile();
        if(config == null){
            return;
        }
        String fileName = config.toString();
        lastDirectory = config.getParent();
        
        
        
        //Gravando o conteúdo no arquivo ============================================

        try {
            if(!fileName.endsWith(".csv")){
                fileName = fileName + ".csv";
            }
            //Abrindo o arquivos
            BufferedWriter out = new BufferedWriter(new OutputStreamWriter(new FileOutputStream(fileName),"UTF-8"));
            //Gravando o cabeçalho
            out.write("Antecedente;Consequente;Suporte;Confiança;Lift;Rule Interest;Convicção;\n");
            //Fechando o arquivo
            out.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao gerar o arquivo de saída", "Association Rule Miner", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
            return;
        }
        
        JOptionPane.showMessageDialog(null, "Arquivo CSV gerado com sucesso.", "Association Rule Miner", JOptionPane.INFORMATION_MESSAGE);
        
    }//GEN-LAST:event_bExportarCSVActionPerformed

    private void bCopyClipboardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bCopyClipboardActionPerformed
        StringBuffer saida = gerarConteudo();
        if(saida == null){
            return;
        }
        
        Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();
        StringSelection selection = new StringSelection(saida.toString());
        clipboard.setContents(selection, null);
        
        JOptionPane.showMessageDialog(null, "Conteúdo copiado para a área de trabalho com sucesso.", "Association Rule Miner", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_bCopyClipboardActionPerformed

    private StringBuffer gerarConteudo(){
        
        DefaultTableModel modelo = (DefaultTableModel)tRegras.getModel();
        int numRows = modelo.getRowCount();
        int numColumns = modelo.getColumnCount();
        
        if(numRows == 0){
            JOptionPane.showMessageDialog(null, "Não há regras para serem exportadas", "Association Rule Miner - RR", JOptionPane.ERROR_MESSAGE);
            return null;
        }        

        //Gerando a string com o conteúdo de saída =========================================
        
        DecimalFormat formatador = new DecimalFormat("#0.0000");  //Formatador de casas decimais
        
        StringBuffer saida = new StringBuffer();
        
        saida.append("Antecedente;Consequente;Suporte;Confiança;Lift;Rule Interest;Convicção;\n");
        
        for(int i=0;i<numRows;i++){
            for(int j=0;j<numColumns;j++){
                if(j < 2){
                    saida.append(modelo.getValueAt(i, j) + ";");
                }else{
                    saida.append(formatador.format(modelo.getValueAt(i, j)) + ";");    
                }
            }
            saida.append("\n");
        }
        
        return saida;
    }
    
    private ArrayList<Regra> filtrarRegras(){
        ArrayList<Regra> regrasFiltradas = new ArrayList<Regra>();
        
        String itemAntecedente = tItemAntecedente.getText();
        String itemConsequente = tItemConsequente.getText();
        
        if(regras == null){
            return null;
        }
        
        for(Regra regra : regras){
            
            if(cItemAntecedente.isSelected() && cItemConsequente.isSelected()){
                if(regra.getCorpo().contains(itemAntecedente) && regra.getCabeca().contains(itemConsequente)){ 
                    regrasFiltradas.add(regra);
                }
            }else if(cItemAntecedente.isSelected()){
                if(regra.getCorpo().contains(itemAntecedente)){ 
                    regrasFiltradas.add(regra);
                }
            }else if(cItemConsequente.isSelected()){
                if(regra.getCabeca().contains(itemConsequente)){ 
                    regrasFiltradas.add(regra);
                }
            }
        }
        return regrasFiltradas;
    }
    
    
    public DefaultTableModel gerarModeloTabela(ArrayList<Regra> regras){
        if(regras == null){
            return null;
        }
        DefaultTableModel modelo = (DefaultTableModel)tRegras.getModel();
        while(modelo.getRowCount() > 0){
            modelo.removeRow(0);    
        }
        
        for(int linha=0;linha<regras.size();linha++){
            Object[] dados = new Object[9];
            dados[0] = new String(regras.get(linha).getCorpo());
            dados[1] = new String(regras.get(linha).getCabeca());
            dados[2] = new Double(regras.get(linha).getSuporte());
            dados[3] = new Double(regras.get(linha).getConfianca());
            dados[4] = new Double(regras.get(linha).getLift());
            dados[5] = new Double(regras.get(linha).getRi());
            dados[6] = new Double(regras.get(linha).getConviccao());
            dados[7] = new Double(regras.get(linha).getAddedValue());
            dados[8] = new Double(regras.get(linha).getOddsRatio());
            
            modelo.addRow(dados);
        }
        
        //DefaultTableModel modelo = new DefaultTableModel(dados,colunas);
        return modelo;
        
        
    }
    
    public void definirConfiguracao(){
        configuracao.setConfianca(cConfianca.isSelected());
        configuracao.setLift(cLift.isSelected());
        configuracao.setRi(cConfianca.isSelected());
        configuracao.setConviccao(cConviccao.isSelected());
        configuracao.setAddedValue(cAddedValue.isSelected());
        configuracao.setOddsRatio(cOddsRatio.isSelected());
        
        configuracao.setConfMin(Double.parseDouble(tConfMin.getText()));
        configuracao.setLiftMin(Double.parseDouble(tMinLift.getText()));
        configuracao.setRiMin(Double.parseDouble(tMinRI.getText()));
        configuracao.setConviccaoMin(Double.parseDouble(tMinConviccao.getText()));
        configuracao.setAddedValueMin(Double.parseDouble(tMinAddedValue.getText()));
        configuracao.setOddsRatioMin(Double.parseDouble(tMinOddsRatio.getText()));
        
        configuracao.setExibirCorpoVazio(cRegrasCorpoVazio.isSelected());
        configuracao.setMaxNumItensCorpo(cMaxNumItensCorpo.isSelected());
        configuracao.setNumItensCorpo(Integer.parseInt(tNumItensCorpo.getText()));
        
        configuracao.setRemoverItens(cRemoverItens.isSelected());
        ListModel model = lItens.getModel();
        HashSet<String> itensRemover = new HashSet<String>();
        for(int i=0;i<model.getSize();i++){
            itensRemover.add(model.getElementAt(i).toString());
        }
        configuracao.setItensRemocao(itensRemover);
    }
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaPrincipal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bCopyClipboard;
    private javax.swing.JButton bExportarCSV;
    private javax.swing.JButton bFiltrar;
    private javax.swing.JButton bProcurar;
    private javax.swing.JCheckBox cAddedValue;
    private javax.swing.JCheckBox cConfianca;
    private javax.swing.JCheckBox cConviccao;
    private javax.swing.JCheckBox cItemAntecedente;
    private javax.swing.JCheckBox cItemConsequente;
    private javax.swing.JCheckBox cLift;
    private javax.swing.JCheckBox cMaxNumItensCorpo;
    private javax.swing.JCheckBox cOddsRatio;
    private javax.swing.JCheckBox cRI;
    private javax.swing.JCheckBox cRegrasCorpoVazio;
    private javax.swing.JCheckBox cRemoverItens;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JList<String> lItens;
    private javax.swing.JLabel lNumRegras;
    private javax.swing.JLabel lTempo;
    private javax.swing.JTextField tCaminhoBase;
    private javax.swing.JTextField tConfMin;
    private javax.swing.JTextField tItemAntecedente;
    private javax.swing.JTextField tItemConsequente;
    private javax.swing.JTextField tMinAddedValue;
    private javax.swing.JTextField tMinConviccao;
    private javax.swing.JTextField tMinLift;
    private javax.swing.JTextField tMinOddsRatio;
    private javax.swing.JTextField tMinRI;
    private javax.swing.JTextField tNumItensCorpo;
    private javax.swing.JTable tRegras;
    private javax.swing.JTextField tSupMin;
    // End of variables declaration//GEN-END:variables
}
